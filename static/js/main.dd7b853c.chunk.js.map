{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Container/Container.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","s","container","Propypes","PropTypes","node","Section","title","FeedbackOptions","changeCase","str","toUpperCase","feedbackContainer","this","props","options","map","option","index","feedbackButton","type","onClick","onLeaveFeedback","Component","Statistics","good","neutral","bad","total","positivePercentage","statisticsConstiner","protTypes","number","isRequired","Notification","message","notificationText","string","App","state","hendleClick","key","setState","countTotalFeedback","arr","reduce","acc","value","countPositiveFeedbackPercentage","positive","res","Math","round","Number","isNaN","valuesState","Object","values","kaysState","keys","totalAmount","positiveFeedback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qIACAA,EAAOC,QAAU,CAAC,kBAAoB,2CAA2C,eAAiB,0C,kBCAlGD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,oBAAsB,0C,gBCAxCD,EAAOC,QAAU,CAAC,iBAAmB,yC,+MCGrC,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,IAGvCD,EAAUK,SAAW,CACnBJ,SAAUK,IAAUC,MAGPP,Q,iBCMAQ,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOR,EAAY,EAAZA,SACxB,OACE,gCACG,oBAAIC,UAAWC,IAAEM,MAAjB,SAAyBA,IACzBR,M,gBCoBQS,E,4MAtBbC,WAAa,SAACC,GAAD,OAASA,EAAIC,e,4CAC1B,WAAU,IAAD,OACP,OACE,qBAAKX,UAAWC,IAAEW,kBAAlB,SACGC,KAAKC,MAAMC,QAAQC,KAAI,SAACC,EAAQC,GAAT,OACtB,wBACElB,UAAWC,IAAEkB,eAEbC,KAAK,SACLC,QAAS,kBAAM,EAAKP,MAAMQ,gBAAgBL,IAJ5C,SAMG,EAAKR,WAAWQ,IAJZC,Y,GARaK,a,iBCDxBC,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAK7B,UAAWC,IAAE6B,oBAAlB,UACE,oBAAG9B,UAAU,uBAAb,mBAA2CyB,KAC3C,oBAAGzB,UAAU,uBAAb,sBAA8C0B,KAC9C,oBAAG1B,UAAU,uBAAb,kBAA0C2B,KAC1C,oBAAG3B,UAAU,uBAAb,oBAA4C4B,KAC5C,oBAAG5B,UAAU,uBAAb,gCACsB6B,EADtB,WAONL,EAAWO,UAAY,CACrBN,KAAMrB,IAAU4B,OAAOC,WACvBP,QAAStB,IAAU4B,OAAOC,WAC1BN,IAAKvB,IAAU4B,OAAOC,WACtBL,MAAOxB,IAAU4B,OAAOC,WACxBJ,mBAAoBzB,IAAU4B,OAAOC,YAGxBT,Q,iBCtBTU,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGnC,UAAWC,IAAEmC,iBAAhB,SAAmCD,KAGrCD,EAAaH,UAAY,CACvBI,QAAS/B,IAAUiC,OAAOJ,YAEbC,QCwDAI,E,4MA1DbC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPa,YAAc,SAACC,GACb,EAAKC,SAAL,eAAiBD,EAAM,EAAKF,MAAME,GAAO,K,EAG3CE,mBAAqB,SAACC,GACpB,OAAOA,EAAIC,QAAO,SAACC,EAAKC,GAAN,OAAgBD,IAAOC,IAAO,I,EAElDC,gCAAkC,SAACpB,EAAOqB,GACxC,IAAIC,EAAMC,KAAKC,MAAO,IAAMxB,EAASqB,GACrC,OAAII,OAAOC,MAAMJ,GACR,EAEFA,G,4CAET,WACE,IAAQzB,EAASZ,KAAK0B,MAAdd,KACAC,EAAYb,KAAK0B,MAAjBb,QACAC,EAAQd,KAAK0B,MAAbZ,IACF4B,EAAcC,OAAOC,OAAO5C,KAAK0B,OACjCmB,EAAYF,OAAOG,KAAK9C,KAAK0B,OAC7BqB,EAAc/C,KAAK8B,mBAAmBY,GACtCM,EAAmBhD,KAAKmC,gCAC5BY,EACAnC,GAGF,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASlB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEQ,QAAS2C,EACTpC,gBAAiBT,KAAK2B,gBAG1B,cAAC,EAAD,CAASjC,MAAM,aAAf,SACmB,IAAhBqD,EACC,cAAC,EAAD,CACEnC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgC,EACP/B,mBAAoBgC,IAGtB,cAAC,EAAD,CAAc1B,QAAS,+B,GAnDjBZ,aCIHuC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dd7b853c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackContainer\":\"FeedbackOptions_feedbackContainer__1WONZ\",\"feedbackButton\":\"FeedbackOptions_feedbackButton__3qtSB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2fel7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1XJo5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsConstiner\":\"Statistics_statisticsConstiner__2Nr5T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationText\":\"Notification_notificationText__160Ko\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Container.module.css\";\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.Propypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nfunction Section({ title, children }) {\n  return (\n    <div>\n      {<h2 className={s.title}>{title}</h2>}\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React, { Component } from \"react\";\n// import \"./FeedbackOptions.css\";\nimport s from \"./FeedbackOptions.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass FeedbackOptions extends Component {\n  changeCase = (str) => str.toUpperCase();\n  render() {\n    return (\n      <div className={s.feedbackContainer}>\n        {this.props.options.map((option, index) => (\n          <button\n            className={s.feedbackButton}\n            key={index}\n            type=\"button\"\n            onClick={() => this.props.onLeaveFeedback(option)}\n          >\n            {this.changeCase(option)}\n          </button>\n        ))}\n      </div>\n    );\n  }\n}\nFeedbackOptions.propTypes = {\n  option: PropTypes.array,\n  onLeaveFeedback: PropTypes.func,\n};\nexport default FeedbackOptions;\n","import React from \"react\";\nimport s from \"./Statistics.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div className={s.statisticsConstiner}>\n      <p className=\"feedback__statistics\">Good: {good}</p>\n      <p className=\"feedback__statistics\">Neutral: {neutral}</p>\n      <p className=\"feedback__statistics\">Bad: {bad}</p>\n      <p className=\"feedback__statistics\">Total: {total}</p>\n      <p className=\"feedback__statistics\">\n        Positive feedback: {positivePercentage}%\n      </p>\n    </div>\n  );\n};\n\nStatistics.protTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => (\n  <p className={s.notificationText}>{message}</p>\n);\n\nNotification.protTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Container from \"./components/Container\";\nimport Section from \"./components/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  hendleClick = (key) => {\n    this.setState({ [key]: this.state[key] + 1 });\n  };\n\n  countTotalFeedback = (arr) => {\n    return arr.reduce((acc, value) => acc + +value, 0);\n  };\n  countPositiveFeedbackPercentage = (total, positive) => {\n    let res = Math.round((100 / total) * positive);\n    if (Number.isNaN(res)) {\n      return 0;\n    }\n    return res;\n  };\n  render() {\n    const { good } = this.state;\n    const { neutral } = this.state;\n    const { bad } = this.state;\n    const valuesState = Object.values(this.state);\n    const kaysState = Object.keys(this.state);\n    const totalAmount = this.countTotalFeedback(valuesState);\n    const positiveFeedback = this.countPositiveFeedbackPercentage(\n      totalAmount,\n      good\n    );\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={kaysState}\n            onLeaveFeedback={this.hendleClick}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {totalAmount !== 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalAmount}\n              positivePercentage={positiveFeedback}\n            />\n          ) : (\n            <Notification message={\"No feedback given\"} />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}